<h2>Z39.50服务器站点管理</h2>

@section style {

    <link rel="stylesheet" href="~/css/message.css" />
}

@section Scripts {
    <script>


        //$(document).ready调用是jQuery推迟函数执行的一项标准技术，
        //它直到浏览器加载并处理了文档的所有HTML元素之后才会执行。
        $(document).ready(function () {

            //alert("ready");

            // 获取所有的操作命令
            getAllZSerItem();

        })

        //获取所有站点
        function getAllZSerItem() {
            //显示等待图层
            showLoading();

            //alert("getAllZSerItem");

            // 调web api，获取全部，todo可以改为分批获取
            var url = "/api/ZSerItem?start=0&count=-1";
            sendAjaxRequest(url, "GET", function (result) {

                if (result.errorCode == -1) {
                    alert(result.errorInfo);
                    return;
                }

                //alert("ok");

                var table = $("#ulResult");//$('.mui-table-view');
                var noWidth = '18px';


                //alert("2");
                for (var i = 0; i < result.data.length; i++) {

                    //显示到界面上



                    var item = result.data[i];

                    //alert("count=" + result.data.length);

                    // alert(item);

                    var id = item.itemId;//item.itemId;
                    //alert(id);

                    if (i >= 99)
                        noWidth = "25px";

                    var li = "";
                    //if (i > 0)
                    li += "<hr/>";

                    li += "<div class='message'  id='_edit_" + id + "' onclick=\"clickMsgDiv('" + id + "')\">"
                        + "<div class='view'>"
                        + "    <table class='view-top'>"
                        + "            <tr>"
                        + "               <td class='title'>" + item.hostName + "</td>"
                        + "                <td class='btn'>"
                        + "                    <div id='btnEdit' style='display: none;'>"
                        + "                        <button class='mui-btn mui-btn-default' onclick=\"gotoEdit('" + id + "')\"'>编辑</button>&nbsp;"
                        + "                         <button class='mui-btn mui-btn-danger' onclick=\"deleteMsg('" + id + "')\">X&nbsp;删除</button>"
                        + "                    </div>"
                        + "                </td>"
                        + "            </tr>"
                        + "        </tbody>"
                        + "    </table>"
                        + "    <div class='content'>" + item.hostName + item.port + "</div>"
                        + "</div>"
                        + "</div>";

                    table.append(li);

                    //alert("3");

                    //if (i == result.records.length - 1) {
                    //    $("#maxNo").val(record.no);
                    //    $("#resultSet").val(result.resultSetName);
                    //}
                }

                // 关闭等待层
                hideLoading();

            }, function (xhq, textStatus, errorThrown) {
                // 关闭等待层
                hideLoading();

                alert(errorThrown);
            });
        }

        // 单击msg进行只读态与编辑态的切换
        function clickMsgDiv(msgId) {

            //alert("走进clientMsgDiv");
            if (msgId == null || msgId == "") {
                alert("未传入msgId");
                return;
            }

            //// 工作人员账号
            //var userName = $("#_userName").text();
            //if (userName == "") {
            //    return;
            //}

            var divId = "#_edit_" + msgId; // div的id命令规则为_edit_msgId
            var editBtn = $(divId).find("#btnEdit");
            //alert(editBtn);

            // 这时候已经不是在浏览界面，应该是编辑态了
            var viewTable = $(divId).children(".view").html();
            if (viewTable == null || viewTable == "") {
                return;
            }

            var editStateClass = "msgEditable";
            var editState = $(divId).hasClass(editStateClass);
            if (editState == true) {
                $(divId).removeClass(editStateClass);

                $(editBtn).css("display", "none");
            }
            else {
                $(divId).addClass(editStateClass);

                $(editBtn).css("display", "block");
            }

           // alert("clickMsgDiv");
        }

        // 删除一项
        function remove(item) {

            alert("remove");
            /*
            var gnl = confirm("你确定要删除图书馆[" + item.libName + "]吗?");
            if (gnl == false) {
                return false;
            }

            //显示等待图层
            showMaskLayer();

            //alert("remove-"+item.libId);
            var url = "/api/LibrarySetting/" + item.id;
            sendAjaxRequest(url, "DELETE", function (result) {
                //getAllLib();

                // 关闭等待层
                //layer.close(index);
                hideMaskLayer();

                if (result.errorCode == -1) {
                    alert(result.errorInfo);
                    return;
                }

                for (var i = 0; i < model.librarys().length; i++) {
                    if (model.librarys()[i].id == item.id) {
                        model.librarys.remove(model.librarys()[i]);
                        break;
                    }
                }

            }, function (xhq, textStatus, errorThrown) {

                // 关闭图层
                hideMaskLayer();

                alert(errorThrown);


            });
            */
        }

        // 新增一项
        function save() {

            alert("save");

            /*
            var libName = model.editor.libName().trim();
            if (libName == "") {
                alert("尚未输入图书馆名称。");
                return;
            }
            var capoUserName = model.editor.capoUserName().trim();
            if (capoUserName == "") {
                alert("尚未输入图书馆dp2capo账号名。");
                return;
            }

            // 图书馆联系人员手机
            var capoContactPhone = model.editor.capoContactPhone().trim();

            var area = model.editor.area().trim();
            if (area == "") {
                alert("尚未输入地区。");
                return;
            }

            // 微信端本方账户
            var wxUserName = model.editor.wxUserName().trim();
            if (wxUserName == "") {
                alert("尚未输入图书馆微信本方账号名。");
                return;
            }
            var wxPassword = model.editor.wxPassword().trim();
            if (wxPassword == "") {
                alert("尚未输入图书馆微信本方密码。");
                return;
            }
            //微信本方联系人
            var wxContactPhone = model.editor.wxContactPhone().trim();

            // 备注
            var comment = model.editor.comment();

            // 参于检索的数据库
            var searchDbs = "";
            if (model.editor.searchDbs() != null)
                searchDbs = model.editor.searchDbs().trim();


            var match = $("#selMatch").val();
            if (match == "") {
                alert("您尚未选择匹配方式。");
                return;
            }

            var state = $("#selState").val();
            //alert(state);


            //alert("id-[" + model.editor.id() + "]-2");

            //显示等待图层
            //var index = loadLayer();
            showMaskLayer();

            var url = "";
            var actionType = "";
            var id = model.editor.id();
            if (id == null || id == "") {
                actionType = "POST";
                url = "/api/LibrarySetting";
            }
            else {
                actionType = "PUT";
                url = "/api/LibrarySetting?id=" + id;
            }
            //alert("id=["+id+"]");


            sendAjaxRequest(url, actionType,
                function (result) {

                    // 关闭等待层
                    //layer.close(index);
                    hideMaskLayer();

                    if (result.errorCode == -1) {
                        alert("保存出错:" + result.errorInfo);
                        return;
                    }

                    //model.librarys.push(newItem);
                    model.displaySummary(true);
                    getAllLib();

                    //清空编辑界面信息
                    clearEditModel();

                },
                function (xhq, textStatus, errorThrown) {
                    // 关闭等待层
                    layer.close(index);
                    hideMaskLayer();

                    alert(errorThrown);

                },
                {
                    id: id,
                    libName: libName,
                    capoUserName: capoUserName,
                    capoContactPhone: capoContactPhone,
                    area: area,
                    wxUserName: wxUserName,
                    wxPassword: wxPassword,
                    wxContactPhone: wxContactPhone,
                    comment: comment,
                    noShareBiblio: getNoShareBiblio(),
                    //verifyBarcode:getVerifyBarcode(),
                    searchDbs: searchDbs,
                    match: match,
                    state: state
                }
            );
            */
        }

        // 清空输入项
        function clearEditCtrl() {
            alert("clearEditCtrl");
        }

        // 点击新增图书馆按钮
        function handleCreateClick() {


            displaySummary(false);

            $("#capo_username").focus();//libName

            // 清空输入项
            clearEditCtrl();

            $("#btnAdd").css('display', 'block');
            $("#btnEdit").css('display', 'none');

        }

        // 是否显示站点信息
        function displaySummary(b) {

        }

        // 在新增图书馆，点击取消
        function handleCancelClick() {
            displaySummary(true);

        }

        function handleEditClick(item) {
            displaySummary(false);

            $("#capo_username").focus();
            $("#btnAdd").css('display', 'none');
            $("#btnEdit").css('display', 'block');

            /*
            model.editor.id(item.id);
            model.editor.libName(item.libName);

            var state = item.state;
            if (state == null)
                state = "";
            $("#selState").val(state);
            */
        }

        // 取消新增或者修改
        function cancelEdit(msgId) {



            if (msgId == null || msgId == "") {
                alert("未传入msgId");
                return;
            }



            var divId = "#_edit_" + msgId; // div的id命令规则为_edit_msgId

            //取消新增
            if (msgId == "new") {
                //创建按钮不可见
                $("#btnCreate").css('display', 'block');
                $(divId).css('display', 'none');
                $(divId).html("");
                return;
            }

            //alert("cancelEdit() 2");

            /*
            //显示态html
            var viewHtml = "";

            // 根据id从服务器取记录，并只读态
            var libId = getLibId();
            var weixinId = $("#weixinId").text();
            if (libId == "") {
                alert("请选择图书馆");
                return;
            }
            if (weixinId == "") {
                alert("异常情况：weixinId为空");
                return;
            }
            //显示等待图层
            //var index = loadLayer();
            showLoading();

            var style = "browse";

            // 调web api
            var url = "/api/LibMessage?weixinId=" + weixinId
                + "&group=" + group
                + "&libId=" + libId
                + "&msgId=" + msgId
                + "&subject="
                + "&style=" + style;
            sendAjaxRequest(url, "GET", function (result) {
                // 关闭等待层
                //layer.close(index);
                hideLoading();

                //alert("回来-"+result.errorCode);
                if (result.errorCode == -1) {
                    alert(result.errorInfo);
                    return;
                }
                if (result.items != null && result.items.length > 0) {

                    // 把数据填在编辑界面
                    var item = result.items[0];
                    var html = getMsgViewHtml(item, false);
                    $(divId).html(html);
                }

            }, function (xhq, textStatus, errorThrown) {
                // 关闭等待层
                //layer.close(index);
                hideLoading();

                alert("访问服务器出错：\r\n" + errorThrown);

            });
            */
        }

        // 获取编辑态html
        function getMsgEditHtml(msgItem) {

            var saveBtnName = "新增";
            var msgId = "new"; //默认新建的情况
            var hostName = "";
            var port = "";
            var dbNames = "";


            if (msgItem != null) {
                msgId = msgItem.id;
                hostName = msgItem.hostName;
                port = msgItem.port;
                dbNames = msgItem.dbNames;

                saveBtnName = "保存";
            }



            //alert("getMsgEditHtml 1");

            var html = "<table class='edit'>"

            
            html += "<tr>"
                + "<td class='label'>服务器地址</td>"
                + "<td class='value'>"
                + "<input class='' id='_hostName' type='text' value='" + hostName + "'>"
                + "</td>"
                + "</tr>"

                +"<tr>"
                + "<td class='label'>端口</td>"
                + "<td class='value'>"
                + "<input class='' id='_port' type='text' value='" + port + "'>"
                + "</td>"
                + "</tr>"
                + "</tr>";

           

            html += "<tr>"
                + "<td colspan='2'>"
                + "<button class='mui-btn mui-btn-primary' onclick=\"save('" + msgId + "')\">" + saveBtnName + "</button>&nbsp;&nbsp;"
                + "<button class='mui-btn mui-btn-default' onclick=\"cancelEdit('" + msgId + "')\">取消</button>"
                + "</td>"
                + "</tr>"
                + "</table>";
            return html;
        }

        // 进入编辑态
function gotoEdit(msgId) {

    //$("#divNo").css('display', 'none');
    //alert($("#divNo"));

    if (msgId == null || msgId == "") {
        alert("未传入msgId");
        return;
    }

    // 2016-8-13 任延华加
    // 关闭其它正在编辑的msg
    var editDiv = $("#_subject_main").find(".edit").each(function (index) {
        //alert(index);//循环的下标值，从0开始
        var myMsgId = "";
        var editId = $(this).parent().attr("id");
        if (editId != null && editId.length > 6 && editId.substring(0, 6) == "_edit_")
        {
            myMsgId = editId.substring(6);
        }        
        //alert(editId + "***" + myMsgId);

        // 关闭编辑区
        cancelEdit(myMsgId);
    });




    var divId = "#_edit_" + msgId; // div的id命令规则为_edit_msgId

    // 新增的情况
    if (msgId == "new") {
        //创建按钮不可见
        $("#btnCreate").css('display', 'none');
        $(divId).css('display', 'block');
        var html = getMsgEditHtml(null);
        $(divId).html(html);

        //由于一进来没有显示编辑界面，所以这里要重新设一下
        setShowTopButton();
        return;
    }

    /*
    //根据id从服务器上取记录
    var libId = getLibId(); //$("#selLib").val();
    var weixinId = $("#weixinId").text();
    if (libId == "") {
        alert("请选择图书馆");
        return;
    }
    if (weixinId == "") {
        alert("异常情况：weixinId为空");
        return;
    }
    //显示等待图层
    //var index = loadLayer();
    showLoading();

    var style = "original";
    var url = "/api/LibMessage?weixinId=" + weixinId
                + "&group=" + group
                + "&libId=" + libId
                + "&msgId=" + msgId
                + "&subject="
                + "&style=" + style;
    sendAjaxRequest(url, "GET", function (result) {
        // 关闭等待层
        //layer.close(index);
        hideLoading();

        //alert("gotoEdit 2\n"+url);


        //alert("回来-"+result.errorCode);
        if (result.errorCode == -1) {
            alert(result.errorInfo);
            return;
        }
        //alert("gotoEdit 3");

        // 把返回的数组加到观察数组
        if (result.items != null && result.items.length > 0) {

            //alert("gotoEdit 4");

            // 把数据填在编辑界面
            var item = result.items[0];
            //alert(item);

            var html = getMsgEditHtml(item);
            $(divId).html(html);

            //alert(html);
            //alert("gotoEdit 5");


            //由于一进来没有显示编辑界面，所以这里要重新设一下
            setShowTopButton();

            // 设置checkbox的选中项
            var subject1 = item.subject;
            if (subject1 != null && subject1 != "") {
                //alert(subject1);
                $(divId).find("#selSubject").val(subject1);
                
            }


            //alert("gotoEdit 6");

        }

    }, function (xhq, textStatus, errorThrown) {

        // 关闭等待层
        //layer.close(index);
        hideLoading();

        alert("访问服务器出错：\r\n" + errorThrown);

        });

        */
}


    </script>
}

<div id="divNew">
    <div id='_edit_new' class="mui-card message" style="display:none"></div>
    <div class="mui-content-padded">
        <button id="btnCreate" class="mui-btn mui-btn-block mui-btn-primary" onclick="gotoEdit('new')">
            新增站点
        </button>
    </div>
</div>

<div id="divResult">
    <div id="ulResult"></div>

</div>
