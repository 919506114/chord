@section Scripts {
    <script>

        //观察模型
        var model = {
            reservations: ko.observableArray()    //预约列表
        }

        //2016-6-17 jane 获得当前绑定读者，为了解决普通浏览器返回时，读者信息没更新的问题,iphone倒是更新了
        function getActivePatron() {

            //alert("getActivePatron1");

            // 先删除可观察数组中的已有数据
            model.reservations.removeAll();

            $("#patronBarcode").text("");
            $("#patronName").text("");
            $("#workerUserName").text("");

            var weixinId = $("#weixinId").text();
            if (weixinId == "")
                return;

            // 图书馆
            var libId = getLibId();//$("#selLib").val();
            if (libId == "" || libId == null) {
                return;
            }

            //alert("getActivePatron2");

            //显示等待图层
            var index = loadLayer();

            // 调web api
            var url = "/api/wxuser?libId=" + encodeURIComponent(libId)
                + "&weixinId=" + weixinId
                + "&style=activeAndWorker";
            sendAjaxRequest(url, "GET", function (data) {

               // alert("getActivePatron3");

                // 关闭等待层
                layer.close(index);

                if (data == null)
                    return;

                if (data.length > 0)
                {
                    for (var i = 0; i < data.length; i++) {
                        var user = data[i];
                        // 读者
                        if (user.type==0)
                        {
                            $("#patronBarcode").text(user.readerBarcode);
                            $("#patronName").text(user.readerName);

                            //alert("getActivePatron4");
                        }
                        else if  (user.type==1)
                        {
                            $("#workerUserName").text(user.userName);

                            //alert("getActivePatron5");
                        }
                    }
                }

               // alert("getActivePatron6");


                // 获取预约列表
                getReservations();

            }, function (xhq, textStatus, errorThrown) {

                alert(errorThrown);

                // 关闭等待层
                layer.close(index);
            });
        }

        //获取预约列表
        function getReservations(checkBarcode, obj, info, bWarn) {

            //alert("getReservations1");

            // 先删除可观察数组中的已有数据
            model.reservations.removeAll();                     

            // 图书馆
            var libId = getLibId();//$("#selLib").val();
            if (libId == "" || libId == null) {

                //alert("getReservations1-1");
                return;
            }

            var patronBarcode = $("#patronBarcode").text();
            if (patronBarcode == "")
            {
                //alert("getReservations1-2");

                return;// 未绑定
            }

           // alert("getReservations2");


            //显示等待图层
            var index = loadLayer();

            // 调web api
            var url = "/api/Reservation?libId=" + encodeURIComponent(libId)
                + "&patronBarcode=" + encodeURIComponent(patronBarcode);
            sendAjaxRequest(url, "GET", function (result) {
                //alert("getReservations3");


                // 关闭等待层
                layer.close(index);

                // 出错或未命中
                if (result.errorCode == -1 || result.errorCode == 0) {
                    openMsg(result.errorInfo);
                    return;
                }

                for (var i = 0; i < result.reservations.length; i++) {
                    //加到观察数组中
                    model.reservations.push(result.reservations[i]);
                }

                //alert("getReservations4");


                if (checkBarcode != null && checkBarcode != "" && obj!=null) {

                    //alert("getReservations5");

                    var myhtml = getReservationHtml(checkBarcode)
                    alert("myhtml ["+myhtml+"]");

                    $(obj)[0].innerHTML = myhtml;  // 不能直接设html
                    //$("#responsediv")[0].innerHTML = msg就可以获得这个Dom对象使用innerHTML。

                    var infoDiv = $(obj).parent().find(".resultInfo").first();
                    //alert(infoDiv);
                   // alert("["+info+"]");

                    $(infoDiv)[0].innerHTML=info;//.text(info);
                    if (bWarn==true)
                        $(infoDiv).css("background-color", "yellow");  //设为绿色
                    else
                        $(infoDiv).css("color", "darkgreen");  //设为绿色

                    //alert($(infoDiv).attr('id'));
                }

            }, function (xhq, textStatus, errorThrown) {

                alert(errorThrown);
                // 关闭等待层
                layer.close(index);
            });
        }

        function getReservationState(barcode)
        {
            //alert("getReservationState1");
            if (model.reservations().length == 0)
                return "未预约";

            //alert("getReservationState2");

            for (var i = 0; i < model.reservations().length; i++) {

                //alert("getReservationState3-"+i);
                var oneReservation = model.reservations()[i];
                var barcodeList = oneReservation.pureBarcodes;
                var arrivedBarcode = oneReservation.arrivedBarcode;
                var nIndex = barcodeList.indexOf(barcode);

                //alert(barcodeList + "-" + arrivedBarcode);
                if (nIndex>=0)
                {
                    if (barcode== arrivedBarcode)
                        return "已到书";
                    else
                        return "已预约";
                }                
            }

            return "未预约";
        }


        //$(document).ready调用是jQuery推迟函数执行的一项标准技术，
        //它直到浏览器加载并处理了文档的所有HTML元素之后才会执行。
        $(document).ready(function () {

            //alert("ready");

            //绑定观察模块
            ko.applyBindings(model);

            // 获取当前图书馆对应的读者
            //2016-6-17 jane 获得当前绑定读者，为了解决普通浏览器返回时，读者信息没更新的问题,iphone倒是更新了
            getActivePatron();



            // 密码框打回车时，进行绑定
            $('#txtWord').bind('keypress', function (event) {
                //alert("test");
                if (event.keyCode == "13") {
                    // 要先给观察模型赋值一下,鼠标没离开输入框时，观察者模型还没有值
                    search();
                }
            });

            // 设顶部菜单不固定
            $("#myheader").css("position", "absolute");

            //redoSearch();
            window.setTimeout("redoSearch()", 10);
            //// 当按浏览器返回按钮时，要显示原来的数据
            //var word = $('#txtWord').val();
            //if (word != "") {
            //    //alert("maxNo=" + $("#maxNo").val());
            //    var expandId = $('#expandId').val();
            //    search("_ReView", expandId);
            //}


        });

        function redoSearch()
        {
            //alert("redoSearch1");
            // 当按浏览器返回按钮时，要显示原来的数据
            var word = $('#txtWord').val();
            if (word != "") {

                //alert("redoSearch2");


                //alert("maxNo=" + $("#maxNo").val());
                var expandId = $('#expandId').val();
                search("_ReView", expandId);

                ///alert("redoSearch3");

            }
        }



        // 检索
        function search(bNext, expandId) {

            // 先删除more
            $("#more").remove();

            var from = "";
            var word = "";

            // 图书馆
            var libId = getLibId();//$("#selLib").val();
            if (libId == "" || libId == null) {
                alert("您尚未选择图书馆。");
                return;
            }


            if (bNext == 'true') {
                from = "_N";
                word = $("#maxNo").val();
            }
            else if (bNext == '_ReView') {
                from = "_ReView";
                word = $("#maxNo").val();
            }
            else {

                // 检查是否选择的检索途径
                from = $("#selFrom").val();
                if (from == "") {
                    alert("您尚未选择检索途径。");
                    return;
                }

                // 检查检索词
                word = $("#txtWord").val();
                if (word == "") {
                    alert("您尚未输入检索词。");
                    return;
                }
                //alert("[" + from + "]-[" + word + "]");

                var table = $("#ulResult");//$('.mui-table-view');
                table.html("");

            }

            //resultSet 如果为空，服务器生成一个
            var resultSet = $("#resultSet").val(); 


            // 调检索接口
            //显示等待图层
            var index = loadLayer();

            // 调web api
            var url = "/api/biblio?libId=" + encodeURIComponent(libId)
                + "&from=" + encodeURIComponent(from)
                + "&word=" + encodeURIComponent(word)
                + "&resultSet=" + encodeURIComponent(resultSet);

            //alert(url);
            sendAjaxRequest(url, "GET",
                function (result) {

                    //alert("回来");

                    // 关闭等待层
                    layer.close(index);

                    //alert("2");
                    if (result.apiResult.errorCode == -1) {
                        $("#searchInfo").text("检索出错:" + result.apiResult.errorInfo);
                        $("#searchInfo").css("color", "red");  //设置p元素的样式颜色为红色
                    }
                    else if (result.apiResult.errorCode == 0) {
                        $("#searchInfo").text("未命中");
                        $("#searchInfo").css("color", "red");  //设置p元素的样式颜色为红色
                    }
                    else {
                        $("#searchInfo").text("命中" + result.apiResult.errorCode + "条记录。");
                        $("#searchInfo").css("color", "darkgreen");  //设置p元素的样式颜色为红色
                    }

                    // 出错或未命中
                    if (result.apiResult.errorCode == -1 || result.apiResult.errorCode == 0) {
                        openMsg(result.apiResult.errorInfo);
                        return;
                    }

                    //alert("1");

                    var table = $("#ulResult");//$('.mui-table-view');
                    var start = 0;
                    if (bNext == 'true') {
                        start =parseInt($("#maxNo").val());
                    }
                    for (var i = 0; i < result.records.length; i++) {
                        var record = result.records[i];
                        var id="record-"+(start+i);
                        var li = "<li class='mui-table-view-cell mui-collapse' id='" + id + "'> "
                            + "<a class='mui-navigate-right'  href='javascript:void(0)' onclick='expand(\""+id+"\")'>" + record.no + " " + record.name + "</a>"
                            + "<div class='mui-collapse-content' style='display:none;'>"
                                + "<div class='pendingDetail biblio' >"
                                    + "<label>"+record.libId+"|"+record.recPath+"</label>"
                                    + "<img src='../img/wait2.gif' />"
                                + "</div>"
                            + "</div>"
                            + "</li>";
                        table.append(li);

                        if (i == result.records.length - 1) {
                            $("#maxNo").val(record.no);
                            $("#resultSet").val(result.resultSetName);
                        }
                    }

                    //<li class="mui-table-view-cell mui-collapse">
                    //<a class="mui-navigate-right" href="#">表单</a>
                    //<div class="mui-collapse-content">



                    //有下页的情况
                    if (result.isCanNext == true) {
                        var li1 = "<li class='mui-table-view-cell'  id='more'>"
                            + "<center><a href='javascript:void(0)' onclick='searchN()'>点击加载更多</a></center>"
                            + "</li>";
                        table.append(li1);
                    }

                    // 打开需要展开的项
                    if (expandId != null && expandId != "")
                    {
                        expand(expandId);
                    }

                    // 关闭等待层
                    //layer.close(index);

                }, function (xhq, textStatus, errorThrown) {

                    alert(errorThrown);
                    // 关闭等待层
                    layer.close(index);
                });
        }



        //预约
        function reservation(obj, barcode, style) {
            //alert($("input[name='ckbBarcode']:checked").length);
            if (style == "delete") {
                var opeName = $(obj).text();
                var gnl = confirm("你确定对册[" + barcode + "]" + opeName + "吗?");
                if (gnl == false) {
                    return false;
                }
            }

            var libId = getLibId();//$("#selLib").val();
            if (libId == "")
            {
                alert("尚未选择图书馆");
                return;
            }

            var patron = $("#patronBarcode").text();
            if (patron == "")
            {
                alert("您尚未绑定图书馆账户，请先绑定账户。");
                return;
            }

            var items = barcode;
            if (items == "") {
                alert("您尚未选择要预约的册记录。");
                return;
            }

            //显示等待图层
            var index = loadLayer();

            var url = "/api/Reservation?libId=" + encodeURIComponent(libId)
                + "&patron=" + encodeURIComponent(patron)
                + "&items=" + encodeURIComponent(items)
                + "&style=" + style;//new 创建一个预约请求,delete删除
            // 调api
            sendAjaxRequest(url, "POST", function (result) {


                // 关闭等待层
                layer.close(index);

                // 显示预约结果
                var infoDiv = $(obj).parent().parent().parent().find(".resultInfo").first();
                //alert(infoDiv);
                var info = result.errorInfo;

                $("input[name='ckbBarcode']").removeAttr("checked");//取消全选 

                // 出错
                if (result.errorCode == -1) {
                    $(infoDiv).text(info);
                    $(infoDiv).css("color", "red");  //设为红色

                    alert(result.errorInfo);
                    return;
                }

                var bWarn = true;
                if (info == "") {
                    info = $(obj).html() + " 操作成功。";
                    bWarn = false;
                }
                else {
                    info = $(obj).html() + " 操作成功。<br>"+info;
                }

                alert(info.replace("<br>","\r\n"));

                // 更新列表
                var div = $(obj).parent().parent();
                getReservations(barcode, div, info, bWarn);


            }, function (xhq, textStatus, errorThrown) {

                // 关闭等待层
                layer.close(index);

                // 显示预约结果
                var infoDiv = $(obj).parent().parent().parent().find(".resultInfo").first();
                var info = "访问服务器出错：[" + errorThrown + "]";
                alert(info);

                $(infoDiv).text(info);
                $(infoDiv).css("color", "red");  //设为红色                
            });
        }

        // 2016-6-17 jane 为了返回时记住展开项，expand函数由原来传一个对象，改为传一个id 
        function expand(expId)
        {
            //根据id找到<li>元素
            var id = "#" + expId;
            var obj = $(id);

            // 如果自己是展开状态，则收缩
            var  state=$(obj).find(".mui-collapse-content").first().css("display");
            if (state == "block") { //自己本来是展开状态，要关闭   
                    $(obj).find(".mui-collapse-content").css("display", "none");
                    $(obj).removeClass("mui-active");
            }
            else {
                //其它收缩
                //$(".mui-collapse-content").css("display", "none");
                //$(".mui-collapse").removeClass("mui-active");

                //自己展开
                $(obj).find(".mui-collapse-content").css("display", "block");
                $(obj).addClass("mui-active");

                // 记住展开项
                $("#expandId").val(expId);

                //检查是否已经加载过了
                var o = $(obj).find(".pendingDetail:first");
                if (o.length == 0) {
                    return;
                }
                else {
                    getDetail(o);
                }
            }
        }

        function getReservationHtml(barcode)
        {
            myReserHtml = "";
            var reservationState = getReservationState(barcode);
            //alert("[" + reservationState + "]");
            var btn = "";
            if (reservationState == "未预约") {
                btn = "<button class='mui-btn  mui-btn-default'  onclick=\"reservation(this,'" + barcode + "','new')\">预约</button>";
            }
            else if (reservationState == "已预约") {
                btn = "<button class='mui-btn  mui-btn-default'  onclick=\"reservation(this,'" + barcode + "','delete')\">取消预约</button>";
            }
            else if (reservationState == "已到书") {
                btn = "<button class='mui-btn  mui-btn-default'  onclick=\"reservation(this,'" + barcode + "','delete')\">放弃取书</button>";
            }
            if (reservationState != "") {
                myReserHtml = "<div class='info'>" + reservationState+"</div>"
                    + "<div class='btn'>" + btn + "</div>";
            }
            return myReserHtml;
        }

        // 续借
        function renew(itemBarcode) {
            if (itemBarcode == "") {
                alert("尚未传入册条码号。");
                return;
            }

            var libId = $("#libId").val();
            if (libId == "")
            {
                alert("尚未选择图书馆");
                return;
            }


            var patronBarcode = $("#patronBarcode").text();
            if (patronBarcode == "") {
                alert("您尚未绑定图书馆读者账户，请先绑定账户。");
                return;
            }

            //显示等待图层
            var index = loadLayer();

            var url = "/api/BorrowInfo?libId=" + encodeURIComponent(libId)
                + "&action=renew"
                + "&patron=" + encodeURIComponent(patronBarcode)
                + "&item=" + encodeURIComponent(itemBarcode)
            // 调api
            sendAjaxRequest(url, "POST", function (result) {

                // 关闭等待层
                layer.close(index);

                // 显示续借结果
                var divId = "#renewInfo-" + itemBarcode;
                var infoDiv = $(divId);
                var info = result.errorInfo;


                // 出错
                if (result.errorCode == -1) {
                    $(infoDiv).text(info);
                    $(infoDiv).css("color", "red");  //设为红色

                    alert(result.errorInfo);
                    return;
                }


                if (info == "")
                    info = "续借成功";

                $(infoDiv).text(info);
                $(infoDiv).css("color", "darkgreen");  //设为绿色

                // todo 需要更新列表
                

            }, function (xhq, textStatus, errorThrown) {

                // 关闭等待层
                layer.close(index);

                // 显示预约结果
                var info = "访问服务器出错：[" + errorThrown + "]";
                alert(info);

                var divId = "#renewInfo-" + itemBarcode;
                var infoDiv = $(divId);

                $(infoDiv).text(info);
                $(infoDiv).css("color", "red");  //设为红色                
            });
        }


        function getDetail(o) {
            // 找到下级的标签，里面存储的线索
            var mylable = o.children("label");

            // pendingDetail没有定义标签label,去掉pendingDetail状态
            if (mylable.length == 0) {
                o.html("没找到存放线索信息的lable标签");
                o.removeClass("pendingDetail");
                return;
            }

            // 取出label设置的线索信息
            var keyword = mylable.text();
            // 未给label设值，去掉pendingDetail状态
            if (keyword.length == 0) {
                o.html("线索信息为空");
                o.removeClass("pendingDetail");
                return;
            }

            // 取出图书馆账号与记录路径
            var nIndex = keyword.indexOf('|');
            var libId = keyword.substring(0, nIndex);
            var biblioPath = keyword.substring(nIndex + 1);
            //alert("type[" + mytype + "]-value[" + myvalue + "]");
            if (libId == "" || biblioPath == "") {
                o.html("记录路径值[" + keyword + "]不对，格式应该为[图书馆id|记录路径]");
                o.removeClass("pendingDetail");
                return;
            }

            // 调api
            var url = "/api/biblio?libId=" + encodeURIComponent(libId) + "&biblioPath=" + encodeURIComponent(biblioPath);
            sendAjaxRequest(url, "GET", function (result) {

                // 出错或未命中
                if (result.errorCode == -1 || result.errorCode == 0) {
                    o.html(result.errorInfo);
                    $(o).css("color", "red");  //设置p元素的样式颜色为红色
                    o.removeClass("pendingDetail");
                    return;
                }

                var itemTables = "";
                if (result.itemList.length == 0)
                    itemTables = "<div class='mui-card item'>"
                        + "<span class='remark'>没有册信息</span>"
                        +"</div>"

                var patronBarcode = $("#patronBarcode").text();
                var bCanReservation = false;
                var returnUrl = "/Biblio/Index";
                var info = "<span class='remark'>您尚未绑定当前选择图书馆的读者账号，所以看不到预约信息，点击<a href='javascript:void(0)' onclick='gotoUrl(\"/Account/Bind?returnUrl=" + encodeURIComponent(returnUrl) + "\")'>这里</a>绑定读者帐号。</span>"
                if (patronBarcode != null && patronBarcode !="") // 有绑定的读者
                {
                    bCanReservation = true;
                    info = "";
                }
                //alert(info);

                var curPatronBarcode = $("#patronBarcode").text();
                var curPatronName = $("#patronName").text();

                for (var i = 0; i < result.itemList.length; i++) {
                    var record = result.itemList[i];
                    var myReserHtml = info;
                    if (bCanReservation == true)
                        myReserHtml = "<div>"+getReservationHtml(record.barcode) + "</div><div class='resultInfo'></div>";

                    var strBorrowInfo = "在架";
                    // 检查是不是当前读者借的
                    if (record.borrower != null && record.borrower != "") {
                        if (curPatronBarcode != record.borrower) {
                            strBorrowInfo = "借阅者:*** 借阅时间:" + record.borrowDate + " 借期:" + record.borrowPeriod;
                        }
                        else {
                            strBorrowInfo = "<div>"
                                    + "<div class='info'>借阅者:" + curPatronName + " 借阅时间:" + record.borrowDate + " 借期:" + record.borrowPeriod + "</div>"
                                    + "<div class='btn'>"
                                    +   "<button class='mui-btn  mui-btn-default'  onclick=\"renew('" + record.barcode + "')\">续借</button>"
                                    + "</div>"
                                +"</div>"
                                + "<div id='renewInfo-" + record.barcode + "'/>";

                            // 此时不能预约
                            myReserHtml = "<div class='remark'>该册目前是您在借中，不能预约。</div>";
                        }
                    }

                    itemTables +="<div class='mui-card item' >"
                    + "<div class='title'>" + record.barcode + "</div>"
                     +"<table>"
                    +"<tr>"
                    + "<td class='label'>状态</td>"
                    + "<td class='value'>" + record.state + "</td>"
                    + "</tr>"
                    + "<tr>"
                    + "<td class='label'>卷册</td>"
                    + "<td class='value'>" + record.volumn + "</td>"
                    + "</tr>"
                    + "<tr>"
                    + "<td class='label'>馆藏地</td>"
                    + "<td class='value'>" + record.location + "</td>"
                    + "</tr>"
                    + "<tr>"
                    + "<td class='label'>价格</td>"
                    + "<td class='value'>" + record.price + "</td>"
                    + "</tr>"
                    + "<tr>"
                    + "<td class='label'>在借情况</td>"
                    + "<td class='value'>" + strBorrowInfo + "</td>"
                    + "</tr>"
                    + "<tr>"
                    + "<td class='label'>预约信息</td>"
                    + "<td class='value' >" + myReserHtml + "</td>"
                    + "</tr>"
                    //
                    + "</table>"
                    +"</div>";
                }



                var worker = $("#workerUserName").text();
                var recommendBtn = "";
                if (worker != null && worker != "") {
                    var recommPath = "/Library/BookEdit?libId=" + libId
                        + "&userName=" + worker
                        + "&biblioPath=" + encodeURIComponent(biblioPath)
                        + "&returnUrl=" + encodeURIComponent('/Biblio/Index')
                    recommendBtn = "<div class='btnRow'><button class='mui-btn  mui-btn-default' "
                        + " onclick=\"gotoUrl('" + recommPath + "')\">好书推荐</button></div>";
                }



                var myHtml = "<span>" + result.summary + "</span>" +recommendBtn+ itemTables;


                //换成实际的值，去掉pendingDetail状态，
                o.html(myHtml);
                o.removeClass("pendingDetail");
            }, function (xhq, textStatus, errorThrown) {
                //出错，去掉pendingDetail状态
                o.html("访问服务器出错：[" + errorThrown+"]");
                o.removeClass("pendingDetail");
            });

            return;
        }


        //必须要换一个名称，被下一页使用，直接用search("true")不行
        function searchN() {
            search("true");
        }


    </script>
}

@section style {
    <style type="text/css">
        /*书目*/
        DIV.biblio {
        }

        /*书目操作按钮行，现在有好书推荐按钮*/
        DIV.biblio DIV.btnRow {
            text-align: right;
        }

        /*整个册块*/
        DIV.item {
            margin: 3px 0px 0px;
            padding: 2px;
        }

        /*册块标题，一般barcode使用该样式*/
        DIV.item .title {
            margin-top: 5px;
            margin-bottom: 5px;
            padding-left: 10px;
            font-size: 20px;
        }

        /*册块备注，没有册文字使用该样式*/
        DIV.item .remark {
            color: #999999;
            padding: 2px;
        }

        /*一条一条的册table*/
        DIV.item TABLE {
            text-align: left;
            background-color: white;
            width: 100%;
            margin-top: 10px;
        }

        /*册td*/
        DIV.item TABLE TR TD {
            border-width: 0px;
            border-top-width: 1px;
            border-color: #dddddd;
            border-style: dotted;
            padding: 2px;
        }

        /*册右值数据td*/
        DIV.item TABLE TR TD.value {
            padding-left: 5px;
        }

        /*册右值数据td*/
        DIV.item TABLE TR TD.value  DIV.info{
            float:left; 
            padding-top:5px
        }

        /*册右值数据td*/
        DIV.item TABLE TR TD.value  DIV.btn{
            float:right; 
        }

        /*册左侧标题td*/
        DIV.item TABLE TR TD.label {
            width: 75px;
            background-color: #ffffff;
            color: #999999;
            padding-right: 5px;
            text-align: right;
        }

        /*册里面的操作提示*/
        DIV.item TABLE TR TD .resultInfo {
            /*显示预约结果的span*/
        }
    </style>
}

@section header {
    <h1 class="mui-title">书目查询</h1>
    }
<span id="weixinId" style="display:none;">@Session[dp2weixin.service.WeiXinConst.C_Session_WeiXinId]</span>
<span id="patronBarcode" style="display:none">@ViewBag.PatronBarcode</span>
<span id="patronName" style="display:none">@ViewBag.PatronName</span>
<span id="workerUserName" style="display:none">@ViewBag.workerUserName</span>

<!--关于结果集-->
<input id="maxNo" type="hidden" >
<input id="resultSet" type="hidden" value="" disabled="disabled">
<input id="expandId" type="hidden" value="" disabled="disabled">

    <div id="divForm">
        <div class="mui-input-group">
            <!--
            <div class="mui-input-row ">
                <label style="color:#cccccc;">图书馆</label>
                @Html.Raw(ViewBag.LibHtml)
            </div>
-->
            <div class="mui-input-row ">
                <label style="color:#cccccc">检索途径</label>
                <select id="selFrom" name="selFrom">
                    <option value="title" selected>书名</option>
                    <option value="ISBN">ISBN</option>
                    <option value="contributor">作者</option>
                </select>
            </div>
            <div class="mui-input-row">
                <label style="color:#cccccc">检索词</label>
                <input id="txtWord" type="text" class="mui-input mui-input-clear" placeholder="请输入 检索词">
            </div>
        </div>

        <div class="mui-content-padded">
            <button id='login' class="mui-btn mui-btn-block mui-btn-primary" onclick="search('')">检索</button>


        </div>
    </div>

    <div id="divResult">
        <!--数据列表-->
        <span style="padding-left:10px" id="searchInfo"></span>
        <ul id="ulResult" class="mui-table-view "></ul>


    </div>
