


===
<!DOCTYPE html>
<html lang="zh">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewBag.AppName</title>
    <!--CSS -->
    <link href="@Url.Content("~/Content/mui.min.css?test=1")" rel="stylesheet">
    <link  href="@Url.Content("~/Content/icons-extra.css?test=1")" />
    <link href="@Url.Content("~/Content/style.css?a=1")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/jquery-ui.css")" rel="stylesheet">
    <script src='@Url.Content("~/Scripts/jquery-3.1.1.js")'></script>
    <script src='@Url.Content("~/Scripts/jquery-ui-1.12.1.js")'></script>
    <script src="@Url.Content("~/Scripts/knockout-2.2.0.js")"></script>
    <script  src="@Url.Content("~/Scripts/weixin.js?test=2")"></script>
    <script src="http://res.wx.qq.com/open/js/jweixin-1.0.0.js"></script>
    <script src="@Url.Content("~/Scripts/layer.js?a=1")"></script>
    <link href="@Url.Content("~/Content/layer.css?a=1")" rel="stylesheet">


    @RenderSection("style", required: false)
    @RenderSection("scripts", required: false)
    @RenderSection("HeaderContent", false)

</head>
<body style="padding-bottom:50px;font-family: 'Microsoft YaHei',微软雅黑!important">
    <header class="mui-bar mui-bar-nav" id="myheader">
        @RenderSection("header", required: false)
        <a class=" mui-icon mui-pull-right"  href='javascript:void(0)' onclick='gotoSetting()' style="color:#cccccc"><span style="font-size:10pt" id="_libName">@ViewBag.LibName</span></a>
        <span id="_libId" style="display:none">@ViewBag.LibId</span>
    </header>

    <div class="btn3 clearfix" id="divBottonTab">
        <div class="menu">
            <div class="bt-name">资源</div>
            <div class="new-sub">
                <ul>
                    <li><a href="~/Biblio/Index">书目查询</a></li>
                    <li><a href="~/Library/BookSubject">好书推荐</a></li>
                    <li>
                        <a href="~/Library/BB">公告</a>
                    </li>
                    <li>
                        <a href="~/Library/Home">图书馆介绍</a>
                    </li>
                </ul>
                <div class="tiggle"></div>
                <div class="innertiggle"></div>
            </div>
        </div><!--menu-->

        <div class="menu" >
            <div class="bt-name">我的图书馆</div>
            <div class="new-sub">
                <ul>
                    <li><a href="~/Patron/PersonalInfo">我的信息</a></li>
                    <li><a href="~/Account/Index">绑定账号</a></li>
                    <li><a href="~/Account/ResetPassword">找回密码</a></li>
                    <li><a href="~/Patron/QRcode">二维码</a></li>
                    <li><a href="~/Patron/Setting">设置</a></li>
                </ul>
                <div class="tiggle"></div>
                <div class="innertiggle"></div>
            </div>
        </div><!--menu-->

        <div class="menu">
            <div class="bt-name">更多</div>
            <div class="new-sub">
                <ul>

                    <li>
                        <a href="~/Library/Charge2">借还窗</a>
                    </li>
                    <li>
                        <a href="~/Library/PatronEdit">读者登记</a>
                    </li>

                    <li>
                        <a href="~/Library/dpHome">数字平台</a>
                    </li>
                    <li>
                        <a href="~/Library/Circulate">专业借还</a>
                    </li>
                </ul>
                <div class="tiggle"></div>
                <div class="innertiggle"></div>
            </div>

        </div>
    </div>

    <div class="mui-content" style="padding-top:50px">
        <span id="idTest" style="display:block"></span>
        <div id="loading"></div>
        <div id="mask-background" style="display: none; "></div>
        <div id="mask-progressBar" style="display: none; ">数据处理中，请稍候...</div>
        <!--部分页占位符 -->
        @RenderBody()
    </div>

    <script>
        //弹出垂直菜单
        $(".menu").click(function () {
            if ($(this).hasClass("cura")) {
                $(this).children(".new-sub").hide(); //当前菜单下的二级菜单隐藏
                $(".menu").removeClass("cura"); //同一级的菜单项
            } else {
                $(".menu").removeClass("cura"); //移除所有的样式
                $(this).addClass("cura"); //给当前菜单添加特定样式
                $(".menu").children(".new-sub").slideUp("fast"); //隐藏所有的二级菜单
                //class="bt-name"
                var menuText = $(this).children(".bt-name").html();
                if (menuText == "更多") {
                    var dw = $(document).width();
                    var myval = dw / 3 - 120;
                    if (myval < 0) {
                        //alert(myval);
                        $(this).children(".new-sub").css("left", myval + "px");
                    }
                }
                $(this).children(".new-sub").slideDown("fast"); //展示当前的二级菜单
            }
        });


        var browser = {
            versions: function () {
                var u = navigator.userAgent, app = navigator.appVersion;
                return {         //移动终端浏览器版本信息
                    trident: u.indexOf('Trident') > -1, //IE内核
                    presto: u.indexOf('Presto') > -1, //opera内核
                    webKit: u.indexOf('AppleWebKit') > -1, //苹果、谷歌内核
                    gecko: u.indexOf('Gecko') > -1 && u.indexOf('KHTML') == -1, //火狐内核
                    mobile: !!u.match(/AppleWebKit.*Mobile.*/), //是否为移动终端
                    ios: !!u.match("/\\(i[^;]+;( U;)? CPU.+Mac OS X/"), //ios终端
                    android: u.indexOf('Android') > -1 || u.indexOf('Linux') > -1, //android终端或uc浏览器
                    iPhone: u.indexOf('iPhone') > -1, //是否为iPhone或者QQHD浏览器
                    iPad: u.indexOf('iPad') > -1, //是否iPad
                    webApp: u.indexOf('Safari') == -1, //是否web应该程序，没有头部与底部
                    weixin: u.indexOf('MicroMessenger') > -1, //是否微信 （2015-01-22新增）
                    qq: u.match(/\\sQQ/i) == " qq" //是否QQ
                };
            }(),
            language: (navigator.browserLanguage || navigator.language).toLowerCase()
        };

        function doTopBottom()
        {
            window.setTimeout("showTopBottom()", 1);
        }

        $(document).ready(function () {
            totalHeight = $(window).height();
            if (browser.versions.iPhone == true) {
                $("input").focus(function () {
                    setShowValue(false);
                    doTopBottom();
                });
                $("input").blur(function () {                   
                    setShowValue(true);
                    doTopBottom();
                });

                $("select").focus(function () {
                    setShowValue(false);
                    doTopBottom();
                });
                $("select").blur(function () {
                    setShowValue(true);
                    doTopBottom();
                });

                $("textarea").focus(function () {
                    setShowValue(false);
                    doTopBottom();
                });
                $("textarea").blur(function () {
                    setShowValue(true);
                    doTopBottom();
                });

            }
            else {

            }

        });





        // 设置是否显示头尾参数的值，同时改变背景
        function setShowValue(value) {
            bShowTopBottom = value;
            
        };

        // 真正做事，隐藏或显示头尾菜单
        var bShowTopBottom = true;
        var totalHeight = 0;
        function showTopBottom() {
            if (bShowTopBottom == true) {

                // 把菜单位置设在最下方
                $("#divBottonTab").css('position', 'fixed');
                $("#divBottonTab").css('z-index', '3');
                
                var top = totalHeight - 40;//发现height会越变越小，真是奇怪？ $("#divBottonTab").height();//要用一进来的值，因为iphone会在头顶弹出防欺诈盗号类行 $(window).height()
                //if (top == 416)
                //    top = top - 40;
                $("#divBottonTab").css('top', top+'px');
                //$("#idTest").html(totalHeight + "===" + $("#divBottonTab").height() +"==="+ top);

                $("#divBottonTab").css('display', 'block');
                $("#myheader").css('display', 'block');
            }
            else {
                $("#divBottonTab").css('display', 'none');
                $("#myheader").css('display', 'none');

            }
        };

        function gotoUrl(url) {
            var myUrl = getRootPath() + url;
            window.location = myUrl;
        };

        function getLibId()
        {
            return $("#_libId").text();
        }
        

        function gotoSetting()
        {
            var thisUrl = window.location.pathname; //
            //alert("[" + thisUrl + "]");
            var url = "/Patron/SelectLib";//"/Patron/Setting?returnUrl=" + encodeURIComponent(thisUrl);
            gotoUrl(url);
        }




        // 设置头尾菜单是否显示
        function setShowTopButton() {
            //
            if (browser.versions.iPhone == true) {
                $("input").focus(function () {
                    setShowValue(false);
                    doTopBottom();
                });
                $("input").blur(function () {
                    setShowValue(true);
                    doTopBottom();
                });
                $("select").focus(function () {
                    setShowValue(false);
                    doTopBottom();
                });
                $("select").blur(function () {
                    setShowValue(true);
                    doTopBottom();
                });
                $("textarea").focus(function () {
                    setShowValue(false);
                    doTopBottom();
                });
                $("textarea").blur(function () {
                    setShowValue(true);
                    doTopBottom();
                });
            }

        }




        var jssdkReady = 0;
        var wx;
        if (wx != null) {
            wx.config({
                debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
                appId: '@ViewData["AppId"]', // 必填，公众号的唯一标识
                timestamp: '@ViewData["Timestamp"]', // 必填，生成签名的时间戳
                nonceStr: '@ViewData["NonceStr"]', // 必填，生成签名的随机串
                signature: '@ViewData["Signature"]',// 必填，签名
                jsApiList: [
                    "checkJsApi",
                    'onMenuShareTimeline',
                    'onMenuShareAppMessage',
                    'onMenuShareQQ',
                    'onMenuShareWeibo',
                    'hideMenuItems',
                    'showMenuItems',
                    'hideAllNonBaseMenuItem',
                    'showAllNonBaseMenuItem',
                    'translateVoice',
                    'startRecord',
                    'stopRecord',
                    'onRecordEnd',
                    'playVoice',
                    'pauseVoice',
                    'stopVoice',
                    'uploadVoice',
                    'downloadVoice',
                    'chooseImage',
                    'previewImage',
                    'uploadImage',
                    'downloadImage',
                    'getNetworkType',
                    'openLocation',
                    'getLocation',
                    'hideOptionMenu',
                    'showOptionMenu',
                    'closeWindow',
                    'scanQRCode',
                    'chooseWXPay',
                    'openProductSpecificView',
                    'addCard',
                    'chooseCard',
                    'openCard'
                ] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2。详见：http://mp.weixin.qq.com/wiki/7/aaa137b55fb2e0456bf8dd9148dd613f.html
            });

            wx.error(function (res) {
                //alert('JSSDK config信息验证失败：' + JSON.stringify(res));
                jssdkReady = -1;
            });

            wx.ready(function () {
                jssdkReady = 1;
            });
        }

    </script>
</body>
</html>



===
                // 找到库中对应的记录
                //if (isWeb == true) //web登录
                //{
                //    // 先从库中查找
                //    if (type == 0)
                //    {
                //        List<WxUserItem> foundList = new List<WxUserItem>();
                //        List<WxUserItem> tempList = WxUserDatabase.Current.GetPatron("", libId, readerBarcode);
                //        foreach (WxUserItem u in tempList)
                //        {
                //            if (u.weixinId.Substring(0, 2) == "~~")
                //            {
                //                foundList.Add(u);
                //            }
                //        }
                //        if (foundList.Count > 0)
                //        {
                //            userItem = foundList[0];

                //            //删除多余的临时记录
                //            for (int i = 1; i < foundList.Count; i++)
                //            {
                //                string id1 = foundList[i].id;
                //                WxUserDatabase.Current.Delete(id1);
                //                this.WriteLog1("删除异常多出的web读者帐号" + id1);
                //            }
                //        }
                //    }
                //    else
                //    {
                //        List<WxUserItem> foundList = new List<WxUserItem>();
                //        List<WxUserItem> userList = WxUserDatabase.Current.GetWorkers(null, lib.id, userName);
                //        foreach (WxUserItem u in userList)
                //        {
                //            if (u.weixinId.Substring(0, 2) == "~~")
                //            {
                //                foundList.Add(u);
                //            }
                //        }
                //        if (foundList.Count > 0)
                //        {
                //            userItem = foundList[0];

                //            //删除多余的临时记录
                //            for (int i = 1; i < foundList.Count; i++)
                //            {
                //                string id1 = foundList[i].id;
                //                WxUserDatabase.Current.Delete(id1);
                //                this.WriteLog1("删除异常多出的web工作帐帐号" + id1);
                //            }
                //        }
                //    }
                //}
                //else
                //{

===
        public int CheckIsFromWeiXin(string code,  //微信oauth转过来code
            string state,       
            out string strError, 
            bool checkLibState = true)
        {
            strError = "";

            SessionInfo sessionInfo = this.GetSessionInfo();

          // web入口，且session中没有weixinid，返回未登录
            if (String.IsNullOrEmpty(code)==true 
                && string.IsNullOrEmpty(sessionInfo.WeixinId)==true)
            {
                strError = "未登录";
                return -1;
            }

            // 根据state得到公众号配置信息 2018/3/8
            if (string.IsNullOrEmpty(state) == true)
                state = "ilovelibrary";
            GzhCfg gzh = sessionInfo.gzh;
            List<string>  libList = new List<string>();
            int nRet = dp2WeiXinService.Instance.GetGzhAndLibs(state,
                out gzh,
                out libList,
                out strError);
            if (nRet == -1)
                return -1;
            if (gzh == null)
            {
                strError = "异常，未得到公众号配置信息";
                return -1;
            }
            sessionInfo.gzh = gzh;
            sessionInfo.libIds = libList;


            // 微信id
            string weixinId = sessionInfo.WeixinId;
            bool isWeb = false;


            // 从微信oauth2接口进入时，带了code，可以获取weixinid            
            if (string.IsNullOrEmpty(code) == false)
            {
                // 如果session中的code与传进入的code相同，则不再获取weixinid
                if (String.IsNullOrEmpty(sessionInfo.oauth2_return_code) == false
                    && sessionInfo.oauth2_return_code == code)
                {
                    dp2WeiXinService.Instance.WriteLog1("传进来的code[" + code + "]与session中保存的code相同，不再获取weixinid了。");
                }
                else
                {
                    dp2WeiXinService.Instance.WriteLog2("传进来的code[" + code + "]与session中保存的code[" + sessionInfo.oauth2_return_code + "]不同，重新获取weixinid了，ip=" + Request.UserHostAddress + "。");
                    nRet = dp2WeiXinService.Instance.GetWeiXinId1(code,
                        gzh,
                       out weixinId,
                       out strError);
                    if (nRet == -1)
                    {
                        return -1;
                    }
                    if (String.IsNullOrEmpty(weixinId) == true)
                    {
                        strError = "异常，未得到微信id";
                        return -1;
                    }
                    sessionInfo.oauth2_return_code = code;
                    nRet = sessionInfo.SetWeixinId(weixinId, out strError);
                    if (nRet == -1)
                    {
                        strError = "异常：" + strError;
                        return -1;
                    }

                }
            }
            else //web入口 2018/3/8
            {
                // session中有weixinid时不用重新获取
                if (string.IsNullOrEmpty(weixinId) == true)
                {
                    weixinId = "temp" + "@" + gzh.appId; //2018/3/8
                    isWeb = true;
                    nRet = sessionInfo.SetWeixinId(weixinId, out strError);
                    if (nRet == -1)
                    {
                        strError = "异常：" + strError;
                        return -1;
                    }
                }
            }


            // 检查session是否超时
            if (String.IsNullOrEmpty(sessionInfo.WeixinId) == true)
            {
                strError = "异常：没有weixinId。";
                return -1;
            }

            if (sessionInfo.libIds == null || sessionInfo.libIds.Count == 0)
            {
                strError = "异常：未找到可访问的图书馆";
                return -1;
            }
            if (sessionInfo.CurrentLib == null)
            {
                strError = "异常：未匹配上图书馆";
                return -1;
            }

            gzh = sessionInfo.gzh;//重新赋值一下
            if (gzh == null)
            {
                strError = "未找到公众号配置信息";
                return -1;
            }

            ViewBag.AppName = sessionInfo.gzh.appNameCN;
            ViewBag.weixinId = sessionInfo.WeixinId; 



            //  取出上次记住的图书推荐栏目
            if (Request.Path == "/Library/Book")
            {
                if (sessionInfo.settingItem != null)
                {
                    string xml = sessionInfo.settingItem.xml;
                    ViewBag.remeberBookSubject = UserSettingDb.getBookSubject(xml);
                }
            }




            string libName = sessionInfo.CurrentLibName;//sessionInfo.CurrentLib.Entity.libName;
            
            string libId = sessionInfo.CurrentLib.Entity.id;

            ViewBag.LibName = "[" + libName + "]";
            ViewBag.PureLibName = libName;
            ViewBag.LibId = libId;
            ViewBag.LibraryCode = sessionInfo.CurLibraryCode;

            LibEntity libEntity = dp2WeiXinService.Instance.GetLibById(libId);
            if (libEntity != null && libEntity.state == "到期" 
                && Request.Path.Contains("/Patron/SelectLib") == false) //选择图书馆界面除外
            {
                strError = "服务已到期，请联系图书馆工作人员。";
                return -1;
            }

            


            ViewBag.showPhoto = sessionInfo.showPhoto;
            ViewBag.showCover = sessionInfo.showCover;


            ViewBag.LibState = sessionInfo.CurrentLib.State;
            if (checkLibState == true && sessionInfo.CurrentLib.State == LibraryManager.C_State_Hangup)
            {
                string warn = LibraryManager.GetLibHungWarn(sessionInfo.CurrentLib);
                if (string.IsNullOrEmpty(warn) == false)
                {
                    strError = warn;
                    return -1;
                }
            }

            // 书目查询 与 借还 使用 JSSDK
            try
            {
                if (Request.Path.Contains("/Biblio/Index") == true
                    || Request.Path.Contains("/Library/Charge2") == true)
                {
                    bool bJsReg = JsApiTicketContainer.CheckRegistered(gzh.appId);
                    // 注意这里有时异常
                    JsSdkUiPackage package = JSSDKHelper.GetJsSdkUiPackage(gzh.appId,
                        gzh.secret,
                        Request.Url.AbsoluteUri);//http://localhost:15794/Library/Charge  //http://www.dp2003.com/dp2weixin/Library/Charge
                    ViewData["AppId"] = gzh.appId;
                    ViewData["Timestamp"] = package.Timestamp;
                    ViewData["NonceStr"] = package.NonceStr;
                    ViewData["Signature"] = package.Signature;
                }
            } catch(Exception ex)
            {}

            // 从web入口的
            if (isWeb==true)
            {
                strError = "未登录1";
                return -1;
            }

            return 0;
        }
		==

        /// <summary>
        /// 根据code获取微信id
        /// </summary>
        /// <param name="code"></param>
        /// <param name="state"></param>
        /// <param name="weixinId"></param>
        /// <param name="strError"></param>
        /// <returns></returns>
        public int GetWeiXinId(string code, string state,
            out GzhCfg gzh,
            out string weixinId,
            out List<string> libList,
            out string strError)
        {
            strError = "";
            weixinId = "";
            gzh = null;
            libList = new List<string>();

           
            int nRet = this.GetGzhAndLibs(state,
                out gzh,
                out libList,
                out strError);
            if (nRet == -1)
                return -1;
                
            try
            {
                //用code换取access_token
                var result = OAuthApi.GetAccessToken(gzh.appId, gzh.secret, code);//this.weiXinAppId, this.weiXinSecret, code);
                if (result == null)
                {
                    strError = "GetAccessToken()返回的result为null。";
                    return -1;
                }
                if (result.errcode != ReturnCode.请求成功)
                {
                    strError = "获取微信id出错：" + result.errmsg;
                    return -1;
                }

                // 取出微信id
                weixinId = result.openid + "@" + gzh.appId; //2016-11-16，系统中使用的微信id都带上@appId
                return 0;
            }
            catch (Exception ex)
            {
                strError = "获取微信id异常：" + ex.Message;
                return -1;
            }
        }