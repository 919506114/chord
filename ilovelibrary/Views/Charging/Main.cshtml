@{
    ViewBag.Title = "出纳窗";
}
@section style {
    <style type="text/css">
        .pending {            
            background-color: gray;
        }
        .errorspan {
            color: red;
        }
    </style>
}
@section Scripts {
    <script>

        //======================
        // 读者view model
        var patronVModel = {
            errorInfo: ko.observable(""),

            // 注意必须要后面带("")，可以监控对象
            patron:ko.observable("")
        };

        // 加载读者
        function loadPatronInfo() {
            //alert("loadPatronInfo1");

            // 从服务器api获得读者json数据
            sendAjaxRequest("GET", function (data) {
                //alert(data.apiResult.errorCode);
                //alert(data.patron.barcode);

                patronVModel.errorInfo(data.apiResult.errorInfo);
                if (data.patron == null)
                    patronVModel.patron("");
                else
                    patronVModel.patron(data.patron);

                //alert(patronVModel.patron().barcode);

                if (data.apiResult.errorCode != -1) {
                    // 焦点换到item上
                    $("#txtItemBarcode").focus();
                }
                else {
                    // 不成功选中
                    $("#txtReaderBarcode").select();
                }


            }, "/api/patron/" + $("#txtReaderBarcode").val(),null,
            function (XMLHttpRequest, textStatus, errorThrown) {
                alert(errorThrown);
            });
        }

        // 加载读者信息与借阅信息
        function loadPatron() {
            //alert("1");
            loadPatronInfo();
            //alert("2");
            loadBorrowInfo();
        }

        //===========================
        // 借阅信息
        var borrowModel = {
            errorInfo: ko.observable(""),
            borrows: ko.observableArray(),
        }

        //获取借阅信息
        function loadBorrowInfo() {

            //alert("borrow1");
            var url = "/api/patron/" + $("#txtReaderBarcode").val() + "?format=borrowinfo";
            sendAjaxRequest("GET", function (data) {

                // 先删除可观察数组中的已有数据
                borrowModel.borrows.removeAll();

                // 设上返回的error
                borrowModel.errorInfo(data.apiResult.errorInfo);

                //alert("borrow2-" + data.apiResult.errorCode)

                if (data.apiResult.errorCode != -1) {

                    //alert("borrow3");
                    // 加载借阅记录
                    var list = data.borrowList;
                    if (list.length > 0) {
                        for (var i = 0; i < list.length; i++) {
                            //遍历从服务器得到的结果，以push方法对该数组填充新数据
                            borrowModel.borrows.push(list[i]);
                        }
                    } else {
                        // 显示没有借阅记录
                        borrowModel.errorInfo("您目前没有在借图书。");
                    }

                    // 加载书目摘要
                    //GetSummary();
                    window.setTimeout("GetSummary()", 1);
                }

            }, url);
        }

        // 获得书目摘要
        function GetSummary() {
            //alert("GetSummary1");
            var o = $(".pending:first");
            if (o.length == 0) {
                // $(window).scroll();
                return;
            }

            //alert("GetSummary2");
            var barcode = o.text();
            if (barcode == "") {
                o.removeClass("pending");
                window.setTimeout("GetSummary()", 1);
                return;
            }

            //alert("GetSummary3");
            var lang = "zh";//$('select#langlist option[SELECTED]').attr('value');
            var summaryUrl = "/api/biblio/" + encodeURIComponent(barcode) + "?format=summary";
            //alert(summaryUrl);

            $.ajax({
                url: summaryUrl, //+ lang
                type: 'GET',
                cache: true,
                statusCode: {
                    500: function () {
                        //alert("GetSummary41");
                        o.text('\r\nerror 500');
                        o.removeClass("pending");
                    }
                },
                success: function (data) {
                    //alert("GetSummary42");

                    o.text(data);
                    o.removeClass("pending");
                    
                    //o.show();
                    window.setTimeout("GetSummary()", 1);
                }
            });

            //alert("GetSummary5");
        }

        //=========================
        var cmdModel = {
            commands: ko.observableArray(),
            // 命令编辑
            editor: {
                type: ko.observable("borrow"),
                readerBarcode: ko.observable(""),
                itemBarcode: ko.observable("")
            }
        };

        //用于获取所有命令
        function getAllCmd() {
            sendAjaxRequest("GET", function (data) {

                //alert("getAllCmd");

                // 先删除可观察数组中的已有数据
                cmdModel.commands.removeAll();
                for (var i = 0; i < data.length; i++) {
                    //遍历从服务器得到的结果，以push方法对该数组填充新数据
                    cmdModel.commands.push(data[i]);
                }
            }, "/api/command");
        }

        // 执行命令
        function addCmd() {
            //alert("addCmd0-" + cmdModel.editor.type() + "~" + cmdModel.editor.readerBarcode() + "~" + cmdModel.editor.itemBarcode());

            sendAjaxRequest("POST", function (newItem) {
                //alert("addCmd1");

                // 插入到最前面
                cmdModel.commands.unshift(newItem); //push是加到最后面
                //alert("addCmd2");

                // 置空册条码输入空
                if (newItem.state == 0) {
                    
                    // 成功清空册条码框
                    cmdModel.editor.itemBarcode("");

                    // 当操作成功，才刷新借阅信息
                    loadBorrowInfo();
                }
                else {
                    //操作失败选中册条码框
                    $("#txtItemBarcode").select();
                }

                //alert("addCmd3");
            }, "/api/command", {
                type: cmdModel.editor.type,
                readerBarcode: cmdModel.editor.readerBarcode,
                itemBarcode: cmdModel.editor.itemBarcode
            })
        };

        // 删除命令
        function removeCmd(item) {
            //alert("remove-" + item.id);
            sendAjaxRequest("DELETE", function () {

                //alert("back");
                for (var i = 0; i < cmdModel.commands().length; i++) {
                    if (cmdModel.commands()[i].id == item.id) {
                        cmdModel.commands.remove(cmdModel.commands()[i]);
                        break;
                    }
                }
            }, "/api/command/" + item.id);
        }


        //===================

        // ajax请求
        function sendAjaxRequest(httpMethod, callback, url, reqData,errorCallback) {
            $.ajax(url, {
                type: httpMethod,
                success: callback,
                error: errorCallback,
                data: reqData
            });
        }

        //==========

        //=================
        //$(document).ready调用是jQuery推迟函数执行的一项标准技术，
        //它直到浏览器加载并处理了文档的所有HTML元素之后才会执行。
        $(document).ready(function () {
            // 获取所有的操作命令
            getAllCmd();
            // 加载绑定
            ko.applyBindings(patronVModel, document.getElementById('divPatron'));
            ko.applyBindings(borrowModel, document.getElementById('divBorrow'));
            ko.applyBindings(cmdModel, document.getElementById('divCmd'));

            // 切换table
            $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
                e.target // activated tab
                e.relatedTarget // previous tab

                // 先把输入框中的数据清除
                cmdModel.editor.readerBarcode("");
                cmdModel.editor.itemBarcode("");

               // alert(e.target.id);
                if (e.target.id == "aReturn") {
                    $("#trReaderBarcode").hide();
                    $("#txtItemBarcode").focus();
                    $("#btnDo").text("还");
                    cmdModel.editor.type("return");
                    
                }
                else {
                    $("#trReaderBarcode").show();
                    $("#txtReaderBarcode").focus();

                    if (e.target.id == "aBorrow") {
                        $("#btnDo").text("借");
                        cmdModel.editor.type("borrow");
                    }
                    else {
                        $("#btnDo").text("续借");
                        cmdModel.editor.type("renew");
                    }
                }
            })

            // 给装载按钮绑事件
            $("#btnLoad").click(loadPatron);
            // 给读者证条码输入框加回车事件
            $('#txtReaderBarcode').bind('keypress', function (event) {
                if (event.keyCode == "13") {
                    loadPatron();
                }
            });

            // 给执行按钮绑事件
            $("#btnDo").click(addCmd);
            // 当册条码绑回车事件
            $('#txtItemBarcode').bind('keypress', function (event) {
                if (event.keyCode == "13") {
                    cmdModel.editor.itemBarcode($('#txtItemBarcode').val());

                    addCmd();
                }
            });
        })        

    </script>
}

@{       
    //<p>参数：@Request["showbtn"]-@Request["showlbl"]</p>    
    // 根据url参数决定是否显示标签和按钮
    // 计算各部分宽度
    int icon = 1;
    int left = 0;
    int middle = 0;
    int right = 0;
    string readerIconStr = "<label class='col-xs-" + icon.ToString() + " control-label'><span style='font-size:22px'> <span class='glyphicon glyphicon-user'></span></span></label>";
    string readerLeftStr = "";    
    string readerMiddleStr = "";    
    string readerRightStr = "";
    string readerBarcodeGroupStr = "";
    string itemIconStr = "<label class='col-xs-" + icon.ToString() + " control-label'><span style='font-size:22px'> <span class='glyphicon glyphicon-book'></span></span></label>";
    string itemLeftStr = "";
    string itemMiddleStr = "";
    string itemRightStr = "";
    string itemBarcodeGroupStr = "";
    if (Request["showlbl"] == "1") 
    {
        left = 2;
        readerLeftStr = "<label class='col-xs-" + left.ToString() + " control-label'>证条码号</label>";
        itemLeftStr = "<label class='col-xs-" + left.ToString() + " control-label'>册条码号</label>";
    }
    if (Request["showbtn"] == "1")
    {
        right = 2;
        readerRightStr = "<div class='col-xs-" + right.ToString() + "'>"
                        +"<button type='button' class='btn btn-default btn-lg' id='btnLoad'>装载</button>"
                        +"</div>";
        itemRightStr = "<div class='col-xs-" + right.ToString() + "'>"
                        + "<button type='button' class='btn btn-default btn-lg' id='btnDo'>借</button>"
                        + "</div>";
    }
    middle = 12 - icon - left - right;
    readerMiddleStr = "<div class='col-xs-" + middle + "'>"
                     +"<input type='text' class='form-control input-lg' id='txtReaderBarcode' placeholder='读者证条码号' data-bind='value:cmdModel.editor.readerBarcode'>"
                     +"</div>";
    itemMiddleStr = "<div class='col-xs-" + middle + "'>"
                     + "<input type='text' class='form-control input-lg' id='txtItemBarcode' placeholder='册条码号' data-bind='value:cmdModel.editor.itemBarcode'>"
                     + "</div>";                     

    readerBarcodeGroupStr = "<div class='form-group' id='trReaderBarcode'>"
        + readerIconStr + readerLeftStr + readerMiddleStr + readerRightStr
        + "</div>";
    itemBarcodeGroupStr = "<div class='form-group' >"
        + itemIconStr + itemLeftStr + itemMiddleStr + itemRightStr
        + "</div>";

    var formStr = "<div class='form-horizontal' role='form'>"
        + readerBarcodeGroupStr
        + itemBarcodeGroupStr
        + "</div>";                                             
}




<div class="container" style="background-color:#ffffff">
    <div class="row">
        <div class="col-md-6" style="background-color:#ffffff" id="divCmd">
            <h3><span class="label label-default">出纳窗</span></h3>
                <div class="well">
                    <span style="font-size:large">                        
                            <ul class="nav nav-tabs" id="myTab">
                                <li class="active"><a href="#" data-toggle="tab" id="aBorrow">借</a></li>
                                <li><a href="#home" data-toggle="tab" id="aReturn">还</a></li>
                                <li><a href="#home" data-toggle="tab" id="aRenew">续借</a></li>
                            </ul>
                    </span>
                    <br/>
                    <div class="tab-content">
                        <div class="tab-pane fade in active" id="home">
                            @Html.Raw(formStr)
                        </div>
                </div>
</div>

            <!-- Table -->
            <h3><span class="label label-default">操作历史</span></h3>
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th class="col-lg-1">状态</th>
                            <th>序号</th>
                            <th>命令</th>
                            <th>操作说明</th>
                            <th>信息</th>
                            <th>操作时间</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: cmdModel.commands">
                        <tr data-bind="css: {'danger': state==-1, 'success': state==0}">
                            <td>
                                <font color="green"><span data-bind="css: { 'glyphicon glyphicon-ok': state==0 }"></span></font>
                                <font color="red"><span data-bind="css: { 'glyphicon glyphicon-exclamation-sign': state==-1 }"></span></font>
                            </td>
                            <td data-bind="text:id"></td>
                            <td data-bind="text:type"></td>
                            <td data-bind="text:description"></td>
                            <td data-bind="text:resultInfo"></td>
                            <td data-bind="text:operTime"></td>
                            <td>
                                <span class="glyphicon glyphicon-remove" data-bind="click:removeCmd"></span>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col-md-6">
            <h3><span class="label label-default">读者信息</span></h3>
            <div id="divPatron">
                <span class="errorspan" data-bind="text: patronVModel.errorInfo"></span>
                <table class="table">
                    <tr>
                        <td class="col-lg-3" style="background-color:#EEEEEE">读者证条码号</td>
                        <td class="col-lg-3" data-bind="text: patronVModel.patron().barcode"></td>
                        <td class="col-lg-3" style="background-color:#EEEEEE">证状态</td>
                        <td class="col-lg-3" data-bind="text: patronVModel.patron().state">&nbsp;</td>
                    </tr>
                    <tr>
                        <td style="background-color:#EEEEEE">读者类别</td>
                        <td data-bind="text: patronVModel.patron().readerType"> </td>
                        <td style="background-color:#EEEEEE">失效日期</td>
                        <td data-bind="text: patronVModel.patron().expireDate"></td>
                    </tr>
                    <tr>
                        <td style="background-color:#EEEEEE">姓名</td>
                        <td data-bind="text: patronVModel.patron().name"></td>
                        <td style="background-color:#EEEEEE">单位</td>
                        <td data-bind="text: patronVModel.patron().department"></td>
                    </tr>
                </table>
            </div>

            <h3><span class="label label-default">在借册</span></h3>
            <div  id="divBorrow">
                <span class="errorspan" data-bind="text: borrowModel.errorInfo"></span>

                <table class="table  table-striped">
                    <thead></thead>
                    <tr>
                        <th>册条码号</th>
                        <th>摘要</th>
                        <th>续借次</th>
                        <th>借阅日期</th>
                        <th>期限</th>
                        <th>操作者</th>
                        <th>应还日期</th>
                    </tr>
                    <tbody data-bind="foreach: borrowModel.borrows">
                        <tr>
                            <td data-bind="text: barcode"></td>
                            <td class="pending" >C10</td>
                            <td data-bind="text:renewNo"></td>
                            <td data-bind="text:borrowDate"></td>
                            <td data-bind="text:period"></td>
                            <td data-bind="text:borrowOperator"></td>
                            <td data-bind="text:returnDate"></td>
                        </tr>
                    </tbody>
                </table>
            </div>




        </div>
    </div>
</div>

